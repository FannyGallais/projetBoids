//****************************************************************************
//
//
//
//****************************************************************************


 
 
// ===========================================================================
//                                   Libraries
// ===========================================================================



// ===========================================================================
//                                 Project Files
// ===========================================================================
#include "Predateur.h"
#include <math.h>




//############################################################################
//                                                                           #
//                           Class Predateur                                 #
//                                                                           #
//############################################################################

// ===========================================================================
//                         Definition of static attributes
// ===========================================================================
const double Predateur::Rp = 70;
const double Predateur::Reat = 10;
// ===========================================================================
//                                  Constructors
// ===========================================================================
Predateur::Predateur(void) : Agent()
{
 enChasse = false;
 enDigestion = false;
 attente = 0;
}



// ===========================================================================
//                                  Destructor
// ===========================================================================
Predateur::~Predateur(void)
{
  
}



// ===========================================================================
//                                 Public Methods
// ===========================================================================
void Predateur::deplacementAleatoire(void)
{
	vx+=(rand()/(double)RAND_MAX)*2-1;
	vy+=(rand()/(double)RAND_MAX)*2-1;
	double norm = sqrt(vx*vx+vy*vy);
	double vmax = 2;
	if(norm>vmax)
	{
		vx = vx/(norm/vmax);
		vy = vy/(norm/vmax);
	}


}

void Predateur::Chasse(double xp, double yp) // (xp,yp) les coordonn√©es de la proie
{
	vx = (xp-x)/(sqrt((xp-x)*(xp-x)+(yp-y)*(yp-y)));
	vy = (yp-y)/(sqrt((xp-x)*(xp-x)+(yp-y)*(yp-y)));
}

void Predateur::Digestion()
{
	vx=0;
	vy=0;
	attente ++;
	printf("Je suis en digestion, attente vaut : %d\n",attente);
}
// ===========================================================================
//                                Protected Methods
// ===========================================================================

// ===========================================================================
//                               Non inline accessors
// ===========================================================================
